<?xml version="1.0"?>
<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-importer_mdrecord">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
	<start to="import_mdrecord" />

    <action name="import_mdrecord">
        <sub-workflow>
            <app-path>${wf:appPath()}/import_mdrecord</app-path>
            <propagate-configuration />
            <configuration>
                <property>
                    <name>mdstore_facade_factory_classname</name>
                    <value>eu.dnetlib.iis.wf.importer.mdrecord.MockMDStoreFacadeFactory</value>
                </property>
                <property>
                    <name>mdstore_ids_csv</name>
                    <value>irrelevant-mdstore-id1</value>
                </property>
                <property>
                    <name>output</name>
                    <value>${workingDir}/out</value>
                </property>
                <property>
                    <name>output_report_root_path</name>
                    <value>${workingDir}/report</value>
                </property>
                <property>
                    <name>output_report_relative_path</name>
                    <value>mdrecord</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="consumer" />
        <error to="fail" />
    </action>

	<action name="consumer">
        <java>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <!-- The business Java code that gets to be executed -->
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-C{text,
                eu.dnetlib.iis.metadataextraction.schemas.DocumentText,
                eu/dnetlib/iis/wf/importer/mdrecord/data/output/document_text.json}</arg>
            <arg>-C{report,eu.dnetlib.iis.common.schemas.ReportEntry,
                eu/dnetlib/iis/wf/importer/mdrecord/data/output/report.json}</arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-Itext=${workingDir}/out</arg>
            <arg>-Ireport=${workingDir}/report/mdrecord</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message:
        			[${wf:errorMessage(wf:lastErrorNode())}]
        		</message>
    </kill>

    <end name="end"/>
</workflow-app>
