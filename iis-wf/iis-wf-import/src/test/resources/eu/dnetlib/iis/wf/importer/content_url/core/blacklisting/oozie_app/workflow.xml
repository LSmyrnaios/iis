<?xml version="1.0"?>
<workflow-app xmlns="uri:oozie:workflow:0.4" name="test-importer_content_url_core_blacklisting">

    <global>
        <job-tracker>${jobTracker}</job-tracker>
        <name-node>${nameNode}</name-node>
        <configuration>
            <property>
                <name>mapreduce.job.queuename</name>
                <value>${queueName}</value>
            </property>
            <property>
                <name>oozie.launcher.mapred.job.queue.name</name>
                <value>${oozieLauncherQueueName}</value>
            </property>
        </configuration>
    </global>
    
	<start to="objectstoreid-importer"/>
    
    <action name="objectstoreid-importer">
        <java>
            <!-- The data generated by this node is deleted in this section -->
            <prepare>
                <delete path="${nameNode}${workingDir}/identifier" />
            </prepare>
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <arg>eu.dnetlib.iis.wf.importer.content.ObjectStoreIdentifierDatastoreBuilder</arg>
            <arg>-Pimport.content.approved.objectstores.csv=id1,id2,id3</arg>
            <arg>-Pimport.content.blacklisted.objectstores.csv=id3,id2,id1</arg>
            <arg>-Oidentifier=${workingDir}/identifier</arg>
        </java>
        <ok to="consumer" />
        <error to="fail" />
    </action>

	<action name="consumer">
        <java>
            <!-- This is simple wrapper for the Java code -->
            <main-class>eu.dnetlib.iis.common.java.ProcessWrapper</main-class>
            <!-- The business Java code that gets to be executed -->
            <arg>eu.dnetlib.iis.common.java.jsonworkflownodes.TestingConsumer</arg>
            <!-- All input and output ports have to be bound to paths in HDFS -->
            <arg>-C{identifier,
                eu.dnetlib.iis.common.schemas.Identifier,
                eu/dnetlib/iis/common/data/empty.json}</arg>
            <arg>-Iidentifier=${workingDir}/identifier</arg>
        </java>
        <ok to="end" />
        <error to="fail" />
    </action>

    <kill name="fail">
        <message>Unfortunately, the process failed -- error message: [${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>

    <end name="end"/>
</workflow-app>